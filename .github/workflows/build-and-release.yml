name: Build and Release Database App

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version of the release"
        required: true

jobs:
  build-and-release:
    runs-on: windows-latest # Ensure the runner has Visual Studio 2019

    steps:
      - uses: actions/checkout@v2
        with:
          ref: master

      - name: Setup MSBuild Path
        uses: microsoft/setup-msbuild@v1.0.2 # Set up MSBuild if not already available in the environment

      - name: Setup NuGet
        uses: nuget/setup-nuget@v1.0.5

      - name: Restore NuGet Packages
        run: nuget restore SyberiaAdditionalSoftware.sln -Verbosity detailed

      - name: Build SyberiaServerManager Project
        run: msbuild SyberiaAdditionalSoftware.sln /p:Configuration=Release /p:Platform="Any CPU" /t:SyberiaServerManager:Rebuild

      - name: Copy Files to Artifact Folder
        run: |
          New-Item -ItemType Directory -Force -Path .\artifact
          Copy-Item manager/bin/Release/* .\artifact -Recurse

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: server-manager-artifacts
          path: ./artifact/

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Create and Push Tag
        run: |
          git tag ${{ github.event.inputs.version }}
          git push origin ${{ github.event.inputs.version }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.version }}
          release_name: Release ${{ github.event.inputs.version }}
          draft: false
          prerelease: false
          body: "New release of SyberiaServerManager"
          upload_url: ${{ steps.create_release.outputs.upload_url }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifact/
          asset_name: server-manager-artifacts.zip
          asset_content_type: application/zip
